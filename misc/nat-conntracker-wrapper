#!/usr/bin/env bash
set -o errexit
set -o pipefail

main() {
  local name="${1:-nat-conntracker}"
  : "${RUNDIR:=/var/tmp/travis-run.d}"

  eval "$(travis-tfw-combined-env nat-conntracker || echo 'TFW=false')"

  : "${NAT_CONNTRACKER_CONNTRACK_ARGS:=-o+xml+-E+conntrack}"
  : "${NAT_CONNTRACKER_SELF_IMAGE:-travisci/nat-conntracker:master}"

  local conntrack_args
  conntrack_args="$(__urlunquote "${NAT_CONNTRACKER_CONNTRACK_ARGS}")"

  docker stop "${name}" &>/dev/null || true
  docker rm -f "${name}" &>/dev/null || true

  local env_file="${RUNDIR}/${name}.env"
  (travis-tfw-combined-env nat-conntracker || echo 'TFW=false')>"${env_file}"

  local conntrack_command="conntrack ${conntrack_args}"
  ${conntrack_command} |
    docker run \
      --rm \
      --user nobody \
      --interactive \
      --attach STDIN \
      --attach STDOUT \
      --attach STDERR \
      --name "${name}" \
      --env-file "${env_file}" \
      "${NAT_CONNTRACKER_SELF_IMAGE}"
}

__loadenv() {
  : "${ETC_DEFAULT:=/etc/default}"

  for config_file in \
    nat-conntracker \
    nat-conntracker-cloud-init \
    nat-conntracker-local; do
    if [ -f "${ETC_DEFAULT}/${config_file}" ]; then
      set -o allexport
      source "${ETC_DEFAULT}/${config_file}"
      set +o allexport
    fi
  done
}

__urlunquote() {
  python3 <<EOPYTHON
import sys
import urllib.parse
sys.stdout.write(
    urllib.parse.unquote_plus("${1}") + '\\n'
)
EOPYTHON
}

main "$@"
